{"version":3,"sources":["views/common/header/store/constants.js","views/common/header/store/reducer.js","views/common/header/store/actionCreators.js","views/common/header/style.js","views/common/header/index.js","views/home/store/constants.js","views/home/store/reducer.js","views/home/store/actionCreators.js","views/home/style.js","views/home/index.js","views/sell/style.js","views/sell/index.js","views/profile/style.js","views/profile/index.js","views/detail/style.js","views/detail/index.js","store/reducer.js","store/index.js","App.js","reportWebVitals.js","index.js"],"names":["WELLAT_PROVIDER","WELLAT_ACCOUNT","WELLAT_CHAINID","WELLAT_CHAIN_NAME","WELLAT_OPENSEA","WELLAT_MY_NFT_ASSETS","defaultState","fromJS","walletProvider","account","chainId","chainName","opensea","myNftAsset","stateFn","state","action","type","constants","set","myNftAssets","setWellatProvider","setOpensea","setAccount","setChainId","setChainName","setMyNftAssets","MainWrapper","styled","div","pages","Header","props","handleOpenNavMenu","event","setState","anchorElNav","currentTarget","handleCloseNavMenu","anchorElUser","this","AppBar","position","Container","maxWidth","Toolbar","disableGutters","sx","display","xs","md","mr","Typography","variant","noWrap","component","href","fontFamily","fontWeight","letterSpacing","color","textDecoration","Box","flexGrow","IconButton","size","onClick","Menu","id","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","map","page","key","to","path","MenuItem","textAlign","name","Button","handleOpenNavMenuhandleCloseNavMenu","my","className","p","Avatar","alt","getStarAccount","disconnect","login","Component","str","frontLen","endLen","cha","length","len","xing","i","stt","substring","slice","substr","providerOptions","logo","maskColor","bgColor","borderColor","walletOptions","metamask","displayView","options","drive","detectEthereumProvider","fetcher","fetch","then","res","json","getBlockChainNameByChainId","chains","newArr","filter","item","connect","getIn","dispatch","walletModal","dappWalletModal","provider","on","accounts","actionCreators","changedChainId","Web3","utils","hexToNumberString","Number","chain","info","console","log","error","web3Obj","eth","net","getId","getAccounts","openSeaobjsdk","OpenSeaSDK","networkName","Network","Main","apiKey","process","api","getAssets","owner","assets","CHANGE_HOME_DATA","ADD_ARTICLE_LIST","TOGGLE_SCROLL_TOP","topicList","articleList","recommendList","articlePage","showScroll","getHomeInfo","axios","get","data","changeHomeData","getMoreList","list","nextPage","toggleTopShow","show","HomeWrapper","Home","imgUrl","window","scrollTo","PureComponent","changeHomeDate","changeScrollTopshow","e","document","documentElement","scrollTop","Profile","handleChange","target","value","handleClickSell","price","tokenId","tokenAddress","expirationTime","Math","round","Date","now","createSellOrder","asset","accountAddress","startAmount","listing","catch","err","TextField","label","multiline","onChange","Grid","container","direction","justifyContent","alignItems","sm","Card","openseaLink","split","CardActionArea","src","imageUrl","CardContent","gutterBottom","collection","CardActions","handleCliockShowSellBox","handleCliockBuyNow","order","toLocaleLowerCase","address","fulfillOrder","SnackbarOpen","message","setTimeout","location","reload","handleCliockSell","match","params","handleClose","handleCloseSnackbar","handleCnhange","isOwner","HttpProvider","openseaSDK","getAsset","getOrder","assetContractAddress","side","spacing","description","disableSpacing","disabled","Dialog","DialogTitle","DialogContent","DialogContentText","autoFocus","margin","fullWidth","DialogActions","Snackbar","autoHideDuration","reducer","combineReducers","header","handerReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","App","basename","exact","Sell","Detail","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bfab3148.chunk.js","sourcesContent":["export const WELLAT_PROVIDER = 'header/WELLAT_PROVIDER';\r\nexport const WELLAT_ACCOUNT = 'header/WELLAT_ACCOUNT';\r\nexport const WELLAT_CHAINID = 'header/WELLAT_CHAINID';\r\nexport const WELLAT_CHAIN_NAME = 'header/WELLAT_CHAIN_NAME';\r\nexport const WELLAT_OPENSEA = 'header/WELLAT_OPENSEA';\r\nexport const WELLAT_MY_NFT_ASSETS = 'header/WELLAT_MY_NFT_ASSETS';\r\n","import { fromJS } from 'immutable';\r\nimport * as constants from './constants';\r\nconst defaultState = fromJS({\r\n    walletProvider: '',\r\n    account: '',\r\n    chainId: \"\",\r\n    chainName: \"\",\r\n    opensea: \"\",\r\n    myNftAsset: \"\",\r\n});\r\n\r\nconst stateFn = (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case constants.WELLAT_PROVIDER:\r\n            return state.set('walletProvider', action.walletProvider)\r\n        case constants.WELLAT_ACCOUNT:\r\n            return state.set('account', action.account)\r\n        case constants.WELLAT_CHAINID:\r\n            return state.set('chainId', action.chainId)\r\n        case constants.WELLAT_CHAIN_NAME:\r\n            return state.set('chainName', action.chainName)\r\n        case constants.WELLAT_OPENSEA:\r\n            return state.set('opensea', action.opensea)\r\n        case constants.WELLAT_MY_NFT_ASSETS:\r\n            return state.set('myNftAssets', action.myNftAssets)\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default stateFn;","// import axios from 'axios';\r\nimport * as constants from './constants';\r\n// import { fromJS } from 'immutable';\r\n\r\nexport const setWellatProvider = (walletProvider) =>({\r\n    type: constants.WELLAT_PROVIDER,\r\n    walletProvider\r\n})\r\n\r\nexport const setOpensea = (opensea) =>({\r\n    type: constants.WELLAT_OPENSEA,\r\n    opensea\r\n})\r\n\r\nexport const setAccount = (account) =>({\r\n    type: constants.WELLAT_ACCOUNT,\r\n    account\r\n})\r\n\r\nexport const setChainId = (chainId) =>({\r\n    type: constants.WELLAT_CHAINID,\r\n    chainId\r\n})\r\n\r\nexport const setChainName = (chainName) =>({\r\n    type: constants.WELLAT_CHAIN_NAME,\r\n    chainName\r\n})\r\n\r\nexport const setMyNftAssets = (myNftAssets) =>({\r\n    type: constants.WELLAT_MY_NFT_ASSETS,\r\n    myNftAssets\r\n})\r\n\r\n","import styled from \"styled-components\";\r\n\r\nexport const MainWrapper = styled.div`\r\n  /* overflow: hidden;\r\n  display:flex ;\r\n  justify-content: center;\r\n  align-items: center ;\r\n  .cl-menu {\r\n    a {\r\n      padding: 0 10px;\r\n    }\r\n  } */\r\n  .btu-spac {\r\n     margin-right: 10px;\r\n  }\r\n`\r\n","\r\nimport React, { Component } from \"react\";\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport Container from '@mui/material/Container';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport AdbIcon from '@mui/icons-material/Adb';\r\nimport { OpenSeaSDK, Network } from 'opensea-js'\r\n\r\nimport { actionCreators } from './store';\r\nimport { connect } from 'react-redux';\r\nimport {Link} from 'react-router-dom'\r\nimport { MainWrapper } from './style'\r\nimport dappWalletModal from \"dapp-wallet-modal\";\r\nimport detectEthereumProvider from '@metamask/detect-provider';\r\nimport Web3 from 'web3'\r\nconst pages = [\r\n  { \"name\" : \"Home\", \"path\": \"\"},\r\n];\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {anchorElNav: '', anchorElUser: ''}\r\n    }\r\n\r\n    componentDidMount() {\r\n    //  var wallet =  localStorage.getItem('injected')\r\n    //  if(wallet){\r\n    //   this.props.login()\r\n    //  }\r\n    }\r\n\r\n     handleOpenNavMenu =  (event) => {\r\n      this.setState({\r\n        anchorElNav: event.currentTarget\r\n      })\r\n    }\r\n\r\n  \r\n     handleCloseNavMenu = () => {\r\n      this.setState({\r\n        anchorElNav: null\r\n      })\r\n    };\r\n  \r\n    render() {\r\n      const {anchorElNav } = this.state\r\n        return (\r\n          <MainWrapper>\r\n            <AppBar position=\"static\">\r\n              <Container maxWidth=\"xl\">\r\n                <Toolbar disableGutters>\r\n                  <AdbIcon sx={{ display: { xs: 'none', md: 'flex' }, mr: 1 }} />\r\n                  <Typography\r\n                    variant=\"h6\"\r\n                    noWrap\r\n                    component=\"a\"\r\n                    href=\"/\"\r\n                    sx={{\r\n                      mr: 2,\r\n                      display: { xs: 'none', md: 'flex' },\r\n                      fontFamily: 'monospace',\r\n                      fontWeight: 700,\r\n                      letterSpacing: '.3rem',\r\n                      color: 'inherit',\r\n                      textDecoration: 'none',\r\n                    }}\r\n                  >\r\n                    LOGO\r\n                  </Typography>\r\n\r\n                  <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\r\n                    <IconButton\r\n                      size=\"large\"\r\n                      aria-label=\"account of current user\"\r\n                      aria-controls=\"menu-appbar\"\r\n                      aria-haspopup=\"true\"\r\n                      onClick={this.handleOpenNavMenu}\r\n                      color=\"inherit\"\r\n                    >\r\n                      <MenuIcon />\r\n                    </IconButton>\r\n                    <Menu\r\n                      id=\"menu-appbar\"\r\n                      anchorEl={anchorElNav}\r\n                      anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'left',\r\n                      }}\r\n                      keepMounted\r\n                      transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left',\r\n                      }}\r\n                      open={Boolean(anchorElNav)}\r\n                      onClose={this.handleCloseNavMenu}\r\n                      sx={{\r\n                        display: { xs: 'block', md: 'none' },\r\n                      }}\r\n                    >\r\n                      {pages.map((page,key) => (\r\n                        <Link to={'/'+page.path} key={page.name+key}>\r\n                          <MenuItem  onClick={this.handleCloseNavMenu}>\r\n                            <Typography textAlign=\"center\">{page.name}</Typography>\r\n                          </MenuItem>\r\n                        </Link>\r\n                      ))}\r\n                    </Menu>\r\n                  </Box>\r\n                  <AdbIcon sx={{ display: { xs: 'flex', md: 'none' }, mr: 1 }} />\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    noWrap\r\n                    component=\"a\"\r\n                    href=\"\"\r\n                    sx={{\r\n                      mr: 2,\r\n                      display: { xs: 'flex', md: 'none' },\r\n                      flexGrow: 1,\r\n                      fontFamily: 'monospace',\r\n                      fontWeight: 700,\r\n                      letterSpacing: '.3rem',\r\n                      color: 'inherit',\r\n                      textDecoration: 'none',\r\n                    }}\r\n                  >\r\n                    LOGO\r\n                  </Typography>\r\n                  <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\r\n                    {pages.map((page, key) => (\r\n                      <Link to={'/'+page.path}  key={page.path+key}>\r\n                        <Button\r\n                          onClick={this.handleOpenNavMenuhandleCloseNavMenu}\r\n                          sx={{ my: 2, color: 'white', display: 'block' }}\r\n                        >\r\n                          {page.name}\r\n                        </Button>\r\n                      </Link>\r\n                    ))}\r\n                  </Box>\r\n\r\n                  <Box sx={{ flexGrow: 0 }}>\r\n          \r\n                  { this.props.account ? \r\n                  <div className=\"login\">\r\n                      <Link to=\"/profile\" className=\"btu-spac\">\r\n                        <IconButton sx={{ p: 0 }}>\r\n                          <Avatar alt=\"Remy Sharp\" />\r\n                        </IconButton>\r\n                      </Link>\r\n                      {/* <Link to=\"/curve\"> Curve Tools</Link> */}\r\n                      <Button  variant=\"outlined\" size=\"small\" color=\"inherit\" className=\"btu-spac\" >{this.props.chainName}</Button> \r\n                      <Button  variant=\"outlined\" size=\"small\" color=\"inherit\" className=\"btu-spac\" >{getStarAccount(this.props.account)}</Button> \r\n                      <Button  variant=\"outlined\" size=\"small\" color=\"inherit\" className=\"btu-spac\" onClick={() => this.props.disconnect()}>disconnect</Button> \r\n                  </div>\r\n                  :\r\n                  <div>\r\n                      <Button  variant=\"outlined\" size=\"small\" color=\"inherit\" className=\"btu-spac\" onClick={() => this.props.login()}>connect wallet</Button>\r\n                  </div>\r\n                  }\r\n              \r\n                  </Box>\r\n                </Toolbar>\r\n              </Container>\r\n            </AppBar>\r\n          </MainWrapper>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst getStarAccount = (str, frontLen = 6, endLen = 4, cha = '...') => {\r\n  // if()\r\n  if (str.length > 0) {\r\n    var len = str.length - frontLen - endLen\r\n    var xing = ''\r\n    for (var i = 0; i < len; i++) {\r\n      xing += cha\r\n    }\r\n    var stt = str.substring(0, frontLen) + xing + str.substring(str.length - endLen)\r\n    return stt.slice(0, 7) + stt.substr(-6, 6)\r\n  }\r\n}\r\n\r\nconst CHAINID = 4 \r\n\r\nconst providerOptions = {\r\n  logo: \"\",\r\n  maskColor:'rgb(30, 30, 30, 0.8)',\r\n  bgColor:'#363636',\r\n  borderColor:'#faba30',\r\n  chainId: CHAINID,\r\n  walletOptions: {\r\n    metamask: {\r\n      displayView: {\r\n        logo: \"https://docs.metamask.io/metamask-fox.svg\", // your Wallet logo\r\n        name: \"MetaMask\", // your Wallet name\r\n      },\r\n      options: {\r\n        drive: detectEthereumProvider,  //  drive package\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst mapState = (state) => ({\r\n    walletProvider: state.getIn(['header', 'walletProvider']),\r\n    account: state.getIn(['header', 'account']),\r\n    chainId: state.getIn(['header', 'chainId']),\r\n    chainName: state.getIn(['header', 'chainName']),\r\n    opensea: state.getIn(['header', 'opensea'])\r\n})\r\n const fetcher = async (...args) => fetch(...args).then((res) => res.json());\r\n const getBlockChainNameByChainId = async (chainId = 4) => {\r\n  const chains = await fetcher('https://chainid.network/chains.json');\r\n  let newArr = chains.filter(item => item.chainId === chainId)\r\n  return  newArr[0]\r\n}\r\n\r\nconst mapDispatch = (dispatch) => ({\r\n    async login() {\r\n      const walletModal = new dappWalletModal(providerOptions);\r\n      const provider = await walletModal.connect();\r\n    \r\n      if(provider){\r\n        // Subscribe to accounts change\r\n        provider.on(\"accountsChanged\", (accounts) => {\r\n          dispatch(actionCreators.setAccount(accounts[0]));\r\n        });\r\n\r\n        // Subscribe to chainId change\r\n        provider.on(\"chainChanged\", async (chainId) => {\r\n          var changedChainId= Web3.utils.hexToNumberString(chainId)\r\n          dispatch(actionCreators.setChainId(Number(changedChainId)));\r\n          var chain = await  getBlockChainNameByChainId(Number(changedChainId))\r\n          dispatch(actionCreators.setChainName(chain.name)); \r\n        });\r\n\r\n        // Subscribe to provider connection\r\n        provider.on(\"connect\", (info) => {\r\n          console.log(info);\r\n        });\r\n        \r\n        // Subscribe to provider disconnection\r\n        provider.on(\"disconnect\", (error) => {\r\n          console.log(error);\r\n        });\r\n        var web3Obj = new Web3(provider)\r\n        var chainId = await web3Obj.eth.net.getId()\r\n        var accounts = await web3Obj.eth.getAccounts()\r\n        var chain = await  getBlockChainNameByChainId(chainId)\r\n        const openSeaobjsdk = new OpenSeaSDK(provider, {\r\n            // networkName: Network.Rinkeby,\r\n            networkName: Network.Main,\r\n            apiKey: process.env.REACT_APP_API_KEY\r\n        })\r\n        const myNftAssets = await openSeaobjsdk.api.getAssets({\r\n          owner: accounts[0]\r\n        }) \r\n        dispatch(actionCreators.setWellatProvider(provider));\r\n        dispatch(actionCreators.setAccount(accounts[0]));\r\n        dispatch(actionCreators.setChainId(chainId)); \r\n        dispatch(actionCreators.setChainName(chain.name)); \r\n        dispatch(actionCreators.setOpensea(openSeaobjsdk)); \r\n        dispatch(actionCreators.setMyNftAssets(myNftAssets.assets)); \r\n      }else{\r\n         console.log(\"error\")\r\n      }\r\n    },\r\n    async disconnect() {\r\n      const walletModal = new dappWalletModal(providerOptions);\r\n      await walletModal.disconnect();\r\n      dispatch(actionCreators.setAccount(''));\r\n      dispatch(actionCreators.setWellatProvider(''));\r\n      dispatch(actionCreators.setChainId(''));\r\n      dispatch(actionCreators.setChainName(\"\"));\r\n      dispatch(actionCreators.setOpensea(\"\")); \r\n      dispatch(actionCreators.setMyNftAssets([])); \r\n    }\r\n})\r\n\r\nexport default connect(mapState, mapDispatch)(Header);\r\n\r\n\r\n","export const CHANGE_HOME_DATA = 'home/CHANGE_HOME_DATA';\nexport const ADD_ARTICLE_LIST = 'home/ADD_ARTICLE_LIST';\nexport const TOGGLE_SCROLL_TOP = 'home/TOGGLE_SCROLL_TOP';","import { fromJS } from 'immutable';\nimport * as constants from './constants';\nconst defaultState = fromJS({\n    topicList: [],\n    articleList: [],\n    recommendList: [],\n    articlePage: 1,\n    showScroll: false\n});\n\nconst changeHomeData = (state, action) => {\n    return state.merge({\n        topicList: fromJS(action.topicList),\n        articleList: fromJS(action.articleList),\n        recommendList: fromJS(action.recommendList),\n    });\n}\n\nconst addArticleList = (state, action) => {\n    return state.merge({\n        articleList: state.get('articleList').concat(action.list),\n        articlePage: action.nextPage\n    });\n}\nconst stateFn = (state = defaultState, action) => {\n    switch (action.type) {\n        case constants.CHANGE_HOME_DATA:\n            return changeHomeData(state, action)\n        case constants.ADD_ARTICLE_LIST:\n            return addArticleList(state, action)\n        case constants.TOGGLE_SCROLL_TOP:\n            return state.set('showScroll', action.show)\n        default:\n            return state;\n    }\n\n};\n\nexport default stateFn;","import axios from 'axios';\nimport * as constants from './constants';\nimport { fromJS } from 'immutable';\n\nconst changeHomeData = (data) => ({\n    type: constants.CHANGE_HOME_DATA,\n    topicList: data.topicList,\n    articleList: data.articleList,\n    recommendList: data.recommendList,\n})\n\nconst addHomeList = (list, nextPage) => ({\n    type: constants.ADD_ARTICLE_LIST,\n    list: fromJS(list),\n    nextPage\n})\n\nexport const getHomeInfo = () => {\n    return (dispatch) => {\n        axios.get('/api/home.json').then((res) => {\n            const data = res.data.data;\n            dispatch(changeHomeData(data));\n        })\n    }\n}\n\nexport const getMoreList = (page) => {\n    return (dispatch) => {\n        axios.get('/api/homeList.json?page=' + page).then((res) => {\n            const data = res.data.data;\n            dispatch(addHomeList(data, page + 1));\n        })\n    }\n}\nexport const toggleTopShow = (show) =>({\n    type: constants.TOGGLE_SCROLL_TOP,\n    show\n})","import styled from \"styled-components\";\n\nexport const HomeWrapper = styled.div`\n  overflow: hidden;\n  width:960px;\n  margin:0 auto;\n`\nexport const HomeLeft = styled.div`\n  margin-left:15px;\n  padding-top:30px;\n  width:625px;\n  float:left;\n  .banner-img{\n    width:625px;\n    height:270px;\n  }\n`\nexport const HomeRight = styled.div`\n  width:240px;\n  float:right;\n`\nexport const TopicWrapper = styled.div`\n  padding:20px 0 10px 0;\n  overflow: hidden;\n  margin-left: -10px;\n  border-bottom:1px solid #dcdcdc;\n`\nexport const TopicItem = styled.div`\n  float:left;\n  height:32px;\n  line-height:32px;\n  margin-left:10px;\n  background: #f7f7f7;\n  font-size:14px;\n  padding-right:10px;\n  color:#000;\n  border:1px solid #dcdcdc;\n  border-radius:4px;\n  margin-bottom:10px;\n  .topic-pic{\n    display:block;\n    float:left;\n    width:32px;\n    height:32px;\n    margin-right:10px;\n    margin-right: 10px;\n  }\n`\nexport const ListItem = styled.div`\n  overflow:hidden;\n  padding:20px 0;\n  border-bottom:1px solid #dcdcdc;\n  .pic{\n    width:125px;\n    height:100px;\n    display:block;\n    float:right;\n  }\n`\nexport const ListInfo = styled.div`\n width:500px;\n float:left;\n .title{\n    font-size:18px;\n    line-height:27px;\n    font-weight:bold;\n    color:#333\n }\n .desc{\n   line-height:24px;\n   font-size: 13px;\n   color:#999;\n }\n`\nexport const RecommendWrapper = styled.div`\n  margin:30px 0;\n  width:260px;\n`\n\nexport const RecommendItem = styled.div`\n    width:280px;\n    height:50px;\n    background:url(${(props)=>props.imgUrl});\n    background-size:contain;\n`\n\nexport const LoadMore = styled.div`\n  width:100%;\n  height:40px;\n  line-height:40px;\n  margin:30px 0;\n  background:#a5a5a5;\n  text-align:center;\n  border-radius:20px;\n  color:#fff;\n  cursor: pointer;\n`\n\nexport const BackTop = styled.div`\n position:fixed;\n right:30px;\n bottom:30px;\n width:60px;\n height:60px;\n line-height:60px;\n text-align: center;\n border:1px solid #ccc;\n`","import React, { PureComponent } from 'react';\r\n\r\nimport { actionCreators } from './store';\r\nimport { connect } from 'react-redux';\r\nimport { HomeWrapper } from './style'\r\n\r\n\r\nclass Home extends PureComponent {\r\n    handleScrollTop() {\r\n        window.scrollTo(0, 0);\r\n    }\r\n    render() {\r\n        return (\r\n            <HomeWrapper>\r\n                \r\n            </HomeWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapState = (state) => ({\r\n    showScroll: state.getIn(['home', 'showScroll'])\r\n})\r\n\r\nconst mapDispatch = (dispatch) => ({\r\n    changeHomeDate() {\r\n        dispatch(actionCreators.getHomeInfo());\r\n    },\r\n    changeScrollTopshow(e){\r\n        console.log(document.documentElement.scrollTop)\r\n        if(document.documentElement.scrollTop > 400){\r\n            dispatch(actionCreators.toggleTopShow(true));\r\n        }else{\r\n            dispatch(actionCreators.toggleTopShow(false));\r\n        }\r\n    }\r\n})\r\n\r\n\r\nexport default connect(mapState, mapDispatch)(Home);","import styled from \"styled-components\";\n\nexport const HomeWrapper = styled.div`\n  overflow: hidden;\n  width:960px;\n  margin:0 auto;\n`\nexport const HomeLeft = styled.div`\n  margin-left:15px;\n  padding-top:30px;\n  width:625px;\n  float:left;\n  .banner-img{\n    width:625px;\n    height:270px;\n  }\n`\nexport const HomeRight = styled.div`\n  width:240px;\n  float:right;\n`\nexport const TopicWrapper = styled.div`\n  padding:20px 0 10px 0;\n  overflow: hidden;\n  margin-left: -10px;\n  border-bottom:1px solid #dcdcdc;\n`\nexport const TopicItem = styled.div`\n  float:left;\n  height:32px;\n  line-height:32px;\n  margin-left:10px;\n  background: #f7f7f7;\n  font-size:14px;\n  padding-right:10px;\n  color:#000;\n  border:1px solid #dcdcdc;\n  border-radius:4px;\n  margin-bottom:10px;\n  .topic-pic{\n    display:block;\n    float:left;\n    width:32px;\n    height:32px;\n    margin-right:10px;\n    margin-right: 10px;\n  }\n`\nexport const ListItem = styled.div`\n  overflow:hidden;\n  padding:20px 0;\n  border-bottom:1px solid #dcdcdc;\n  .pic{\n    width:125px;\n    height:100px;\n    display:block;\n    float:right;\n  }\n`\nexport const ListInfo = styled.div`\n width:500px;\n float:left;\n .title{\n    font-size:18px;\n    line-height:27px;\n    font-weight:bold;\n    color:#333\n }\n .desc{\n   line-height:24px;\n   font-size: 13px;\n   color:#999;\n }\n`\nexport const RecommendWrapper = styled.div`\n  margin:30px 0;\n  width:260px;\n`\n\nexport const RecommendItem = styled.div`\n    width:280px;\n    height:50px;\n    background:url(${(props)=>props.imgUrl});\n    background-size:contain;\n`\n\nexport const LoadMore = styled.div`\n  width:100%;\n  height:40px;\n  line-height:40px;\n  margin:30px 0;\n  background:#a5a5a5;\n  text-align:center;\n  border-radius:20px;\n  color:#fff;\n  cursor: pointer;\n`\n\nexport const BackTop = styled.div`\n position:fixed;\n right:30px;\n bottom:30px;\n width:60px;\n height:60px;\n line-height:60px;\n text-align: center;\n border:1px solid #ccc;\n`","import React, { PureComponent } from 'react';\r\n\r\n// import { actionCreators } from './store';\r\nimport { connect } from 'react-redux';\r\nimport { HomeWrapper } from './style.js'\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\n\r\n// import ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\n// import Card from '@mui/material/Card';\r\n// import CardContent from '@mui/material/CardContent';\r\n// import CardMedia from '@mui/material/CardMedia';\r\n// import Typography from '@mui/material/Typography';\r\n// import { Button, CardActionArea, CardActions } from '@mui/material';\r\n// import { Link } from 'react-router-dom'\r\n\r\nclass Profile extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {tokenAddress: '', tokenId: \"\", price:\"\"}\r\n    } \r\n\r\n    handleChange = e => {\r\n        const data = e.target.value\r\n        this.setState({\r\n            [e.target.name]: data\r\n        });\r\n    }\r\n\r\n    handleClickSell = () => {\r\n        const { price, tokenId, tokenAddress } = this.state\r\n           // SELL Fixed price\r\n           const expirationTime = Math.round(Date.now() / 1000 + 60 * 60 * 24)\r\n\r\n           const { opensea, account } = this.props\r\n           opensea.createSellOrder({\r\n           asset: {\r\n               tokenAddress: tokenAddress, \r\n               tokenId: tokenId, \r\n           },\r\n           accountAddress: account,\r\n           startAmount: price,\r\n           expirationTime\r\n           }).then((listing) => {\r\n               console.log(\"listing\", listing)\r\n            //    this.setState({\r\n            //        open: false\r\n            //      });\r\n           }).catch(err=>{\r\n               console.log(\"err\", err)\r\n            //    this.setState({\r\n            //        open: false\r\n            //    });\r\n           })\r\n        console.log(price)\r\n        console.log(tokenId)\r\n        console.log(tokenAddress)\r\n    }\r\n\r\n    \r\n    render() {\r\n        // const { myNftAssets } = this.props\r\n       const { price, tokenId, tokenAddress } = this.state\r\n    //    console.log(asset.imageUrl)\r\n        return (\r\n            <HomeWrapper>\r\n                <Box sx={{ flexGrow: 1 }} className=\"cl-grid\">\r\n                <TextField\r\n                    label=\"token address\"\r\n                    multiline\r\n                    name=\"tokenAddress\"\r\n                    value={tokenAddress}\r\n                    onChange={(e)=>this.handleChange(e)}\r\n                    variant=\"standard\"\r\n                />\r\n                </Box>\r\n                <Box sx={{ flexGrow: 1 }} className=\"cl-grid\">\r\n                <TextField\r\n                    label=\"token id\"\r\n                    multiline\r\n                    name=\"tokenId\"\r\n                    value={tokenId}\r\n                    onChange={this.handleChange}\r\n                    variant=\"standard\"\r\n                />\r\n                </Box>\r\n                <Box sx={{ flexGrow: 1 }} className=\"cl-grid\">\r\n                <TextField\r\n                    label=\"price\"\r\n                    multiline\r\n                    name=\"price\"\r\n                    value={price}\r\n                    onChange={this.handleChange}\r\n                    variant=\"standard\"\r\n                />\r\n                </Box>\r\n    \r\n                <Button variant=\"contained\" onClick={()=>{this.handleClickSell()}}>confirm</Button>\r\n            </HomeWrapper>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapState = (state) => ({\r\n    opensea: state.getIn(['header', 'opensea']),\r\n    chainId: state.getIn(['header', 'chainId']),\r\n    account: state.getIn(['header', 'account']),\r\n    myNftAssets: state.getIn(['header', 'myNftAssets']),\r\n})\r\n\r\n\r\nexport default connect(mapState)(Profile);","import styled from \"styled-components\";\n\nexport const HomeWrapper = styled.div`\n  overflow: hidden;\n  width:1536px;\n  margin:0 auto;\n  display:flex ;\n  .cl-grid {\n    padding:24px ;\n  }\n  .cl-nftname {\n    height:64px ;\n  }\n  .cl-card {\n    margin-bottom: 30px;\n  }\n  .cl-images {\n    text-align: center ;\n    img {\n      height: 300px;\n    }\n  }\n`","import React, { PureComponent } from 'react';\r\n\r\n// import { actionCreators } from './store';\r\nimport { connect } from 'react-redux';\r\nimport { HomeWrapper } from './style'\r\nimport Grid from '@mui/material/Grid';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Typography from '@mui/material/Typography';\r\nimport { Button, CardActionArea, CardActions } from '@mui/material';\r\nimport { Link } from 'react-router-dom'\r\nimport LazyLoad from 'react-lazyload';\r\n\r\nclass Profile extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {anchorElNav: ''}\r\n    } \r\n\r\n    handleOpenNavMenu =  (event) => {\r\n        this.setState({\r\n          anchorElNav: event.currentTarget\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { myNftAssets } = this.props\r\n        console.log(\"myNftAssets\", myNftAssets)\r\n        return (\r\n            <HomeWrapper>\r\n                <Grid\r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"flex-start\"\r\n                alignItems=\"flex-start\"\r\n                className='cl-grid'\r\n                >\r\n                { myNftAssets? myNftAssets.map((item, key) => (  \r\n                   \r\n                    <Grid item xs={2} sm={2} md={3} key={key} className=\"cl-card\">\r\n                        \r\n                          <Card sx={{ maxWidth: 345 }}>\r\n                          <Link to={'detail/'+item.openseaLink.split(\"/\")[4]+'/'+ item.tokenAddress+'/'+item.tokenId} >\r\n                            <CardActionArea>\r\n                                <LazyLoad className='cl-images'>\r\n                                    <img src={item.imageUrl} alt={item.name}  />\r\n                                </LazyLoad>\r\n                                <CardContent>\r\n                                <Typography gutterBottom variant=\"h6\" component=\"div\" className='cl-nftname'>\r\n                                  {item.name}\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                                   {item.collection.name}\r\n                                </Typography>\r\n                                </CardContent>\r\n                            </CardActionArea>\r\n                            </Link>\r\n                            <CardActions>\r\n                                <Button size=\"small\" color=\"primary\">\r\n                                   Reading Doc\r\n                                </Button>\r\n                            </CardActions>\r\n                        </Card>\r\n                     \r\n                    </Grid>\r\n                    \r\n                 ) ) : \"\"}\r\n            \r\n                </Grid>\r\n                \r\n            </HomeWrapper>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapState = (state) => ({\r\n    opensea: state.getIn(['header', 'opensea']),\r\n    chainId: state.getIn(['header', 'chainId']),\r\n    account: state.getIn(['header', 'account']),\r\n    myNftAssets: state.getIn(['header', 'myNftAssets']),\r\n})\r\n\r\n\r\nexport default connect(mapState)(Profile);","import styled from \"styled-components\";\n\nexport const HomeWrapper = styled.div`\n  overflow: hidden;\n  width:1536px;\n  margin:0 auto;\n  display:flex ;\n  .cl-grid {\n    padding:24px ;\n  }\n  .cl-nftname {\n    height:64px ;\n  }\n  .cl-images {\n    text-align: center ;\n    img {\n      height: 300px;\n    }\n  }\n`","import React, { PureComponent } from 'react';\r\n\r\n// import { actionCreators } from './store';\r\nimport { connect } from 'react-redux';\r\nimport { HomeWrapper } from './style.js'\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Card from '@mui/material/Card';\r\n\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardActions from '@mui/material/CardActions';\r\n\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\n\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport ShareIcon from '@mui/icons-material/Share';\r\nimport Snackbar from '@mui/material/Snackbar';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport TextField from '@mui/material/TextField';\r\nimport { OpenSeaSDK, Network } from 'opensea-js'\r\nimport * as Web3 from 'web3'\r\nimport LazyLoad from 'react-lazyload';\r\n// import placeholder from \"../../assets/images/placeholder.png\"\r\n\r\n\r\n\r\nconst vertical = 'top'\r\nconst horizontal = 'right'\r\nclass Profile extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {asset: '', open: false, price: \"\", order: \"\", isOwner: false, SnackbarOpen: false, message: \"\"}\r\n    } \r\n    \r\n    async componentDidMount() {\r\n        const { tokenAddress, tokenId } = this.props.match.params\r\n        const provider = new Web3.providers.HttpProvider('https://mainnet.infura.io')\r\n        const openseaSDK = new OpenSeaSDK(provider, {\r\n            networkName: Network.Main, \r\n            apiKey: process.env.REACT_APP_API_KEY\r\n          })    \r\n        await openseaSDK.api.getAsset({\r\n            tokenAddress: tokenAddress, \r\n            tokenId: tokenId, \r\n        }).then((asset)=>{\r\n            this.setState({\r\n                asset: asset,\r\n            })\r\n  \r\n        }).catch(()=>{\r\n            this.setState({\r\n                asset: [],\r\n            })\r\n        })\r\n        \r\n        await openseaSDK.api.getOrder({\r\n            assetContractAddress: tokenAddress,\r\n            tokenId:tokenId,\r\n            side:\"ask\"\r\n        }).then((order)=>{\r\n    \r\n            this.setState({\r\n                order: order,\r\n            })\r\n        }).catch(()=>{\r\n            this.setState({\r\n                order: \"\",\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    async componentDidUpdate() {\r\n        const { asset } = this.state\r\n        const { account } = this.props\r\n        if(asset){\r\n            var isOwner = false\r\n            if(account.toLocaleLowerCase() === asset.owner.address.toLocaleLowerCase())\r\n                isOwner = true\r\n            this.setState({\r\n                isOwner: isOwner,\r\n            });\r\n        }\r\n      \r\n    }\r\n\r\n    handleCliockShowSellBox = () => {\r\n         this.setState({\r\n            open: true\r\n          });\r\n    }\r\n    handleCliockBuyNow = async () => {\r\n         const { account, opensea } = this.props\r\n         const { asset, order } = this.state\r\n   \r\n         if(account){\r\n            if(account.toLocaleLowerCase() !== asset.owner.address.toLocaleLowerCase()){\r\n                await opensea.fulfillOrder({ order, account }).then(()=>{\r\n                    this.setState({\r\n                        SnackbarOpen: true,\r\n                        message: \"success\"\r\n                    });\r\n                    setTimeout(()=>{\r\n                        window.location.reload()\r\n                    },3000)\r\n                }).catch(err =>{ \r\n                    this.setState({\r\n                        SnackbarOpen: true,\r\n                        message: err.message\r\n                    });\r\n                })\r\n            }\r\n         }else{\r\n            this.setState({\r\n                SnackbarOpen: true,\r\n                message: \"Please click the wallet in the upper right corner to login\"\r\n            });\r\n         }\r\n    }\r\n    handleCliockSell = async () => {\r\n        const { price } = this.state\r\n        const { account, opensea } = this.props\r\n        const { tokenAddress, tokenId } = this.props.match.params\r\n        if(account){\r\n            if(price){\r\n                // SELL Fixed price\r\n                const expirationTime = Math.round(Date.now() / 1000 + 60 * 60 * 24)\r\n                opensea.createSellOrder({\r\n                asset: {\r\n                    tokenAddress: tokenAddress, \r\n                    tokenId: tokenId, \r\n                },\r\n                accountAddress: account,\r\n                startAmount: price,\r\n                expirationTime\r\n                }).then(() => {\r\n                    this.setState({\r\n                        open: false,\r\n                        SnackbarOpen: true,\r\n                        message: \"success\"\r\n                      })\r\n                }).catch( err =>{\r\n                    this.setState({\r\n                        open: false,\r\n                        SnackbarOpen: true,\r\n                        message: err.message\r\n                    });\r\n                })\r\n           \r\n            }else{\r\n                this.setState({\r\n                    SnackbarOpen: true,\r\n                    message: \"Please enter a fixed price\"\r\n                });\r\n            }\r\n        }else{\r\n            this.setState({\r\n                SnackbarOpen: true,\r\n                message: \"Please click the wallet in the upper right corner to login\"\r\n            });\r\n        }\r\n      \r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n          open: false\r\n        });\r\n    }\r\n\r\n    handleCloseSnackbar = () => {\r\n        this.setState({\r\n            SnackbarOpen: false\r\n        });\r\n    }\r\n\r\n    handleCnhange = e => {\r\n        const data = e.target.value\r\n        this.setState({\r\n            price: data\r\n        });\r\n    }\r\n    render() {\r\n        const { asset, open, price, order, isOwner, SnackbarOpen, message } = this.state\r\n        \r\n        return (\r\n            <HomeWrapper>\r\n               <Box sx={{ flexGrow: 1 }} className=\"cl-grid\">\r\n                {asset ?\r\n                <Grid\r\n                  container\r\n                  spacing={2}\r\n                  direction=\"row\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"flex-start\"                \r\n                  >\r\n                    <Grid item xs={3}>\r\n                        <Card sx={{ maxWidth: 345 }}>\r\n                            <LazyLoad className='cl-images'>\r\n                                 <img src={asset.imageUrl} alt={asset.name}  />\r\n                            </LazyLoad>\r\n                            <CardContent>\r\n                                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                                {asset.description}\r\n                                </Typography>\r\n                            </CardContent>\r\n                            <CardActions disableSpacing>\r\n                                <IconButton aria-label=\"add to favorites\">\r\n                                <FavoriteIcon />\r\n                                </IconButton>\r\n                                <IconButton aria-label=\"share\">\r\n                                <ShareIcon />\r\n                                </IconButton>\r\n                            </CardActions>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        {asset.collection.name}\r\n                    </Typography>\r\n                    <Typography gutterBottom variant=\"h6\" component=\"div\" className='cl-nftname'>\r\n                                  {asset.name}\r\n                    </Typography>\r\n                    {(() => {\r\n                        if (order) {\r\n                            return (\r\n                                <Button variant=\"contained\"  disabled={isOwner} onClick={()=>this.handleCliockBuyNow()}>Buy now</Button>\r\n                            )\r\n                        } else {\r\n                            if(isOwner) {\r\n                                return (\r\n                                    <Button variant=\"contained\"  onClick={()=>this.handleCliockShowSellBox()}>SELL</Button>\r\n                                )\r\n                            }\r\n                        }\r\n                    })()}\r\n             \r\n                    </Grid>\r\n                 \r\n                </Grid>\r\n                   : \"\" }\r\n                </Box>\r\n                <Dialog\r\n          \r\n                    open={open}\r\n                    onClose={this.handleClose}\r\n                >\r\n                    <DialogTitle>Price setting</DialogTitle>\r\n                    <DialogContent>\r\n                    <DialogContentText>\r\n                       Please enter a fixed price.\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"price\"\r\n                        label=\"fixed price\"\r\n                        type=\"name\"\r\n                        fullWidth\r\n                        variant=\"standard\"\r\n                        value={price} \r\n                        onChange={this.handleCnhange}\r\n                    />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} >Close</Button>\r\n                        <Button onClick={this.handleCliockSell}>confirm</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Snackbar\r\n                    anchorOrigin={{ vertical, horizontal }}\r\n                    autoHideDuration={6000} \r\n                    open={SnackbarOpen}\r\n                    onClose={this.handleCloseSnackbar}\r\n                    message={message}\r\n                    key={vertical + horizontal}\r\n                />\r\n            </HomeWrapper>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapState = (state) => ({\r\n    opensea: state.getIn(['header', 'opensea']),\r\n    chainId: state.getIn(['header', 'chainId']),\r\n    account: state.getIn(['header', 'account']),\r\n    myNftAssets: state.getIn(['header', 'myNftAssets']),\r\n})\r\n\r\n\r\nexport default connect(mapState)(Profile);","import { combineReducers } from 'redux-immutable';\nimport { reducer as handerReducer } from '../views/common/header/store';\n// import { reducer as approvescanReducer } from '../views/approvescan/store';\n\nconst reducer = combineReducers({\n    header: handerReducer,\n    // approvescan: approvescanReducer\n});\n\nexport default reducer;","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer from './reducer';\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n// + const store = createStore(reducer, /* preloadedState, */ composeEnhancers(\n// - const store = createStore(reducer, /* preloadedState, */ compose(\n//     applyMiddleware(...middleware)\n//   ));\nconst store = createStore(reducer, composeEnhancers(\n    applyMiddleware(thunk)\n))\n\nexport default store;","import { Component } from \"react\";\nimport { BrowserRouter, Route, HashRouter } from \"react-router-dom\";\nimport Herder from \"./views/common/header\";\nimport Home from \"./views/home\";\nimport Sell from \"./views/sell\";\nimport Profile from \"./views/profile\";\nimport Detail from \"./views/detail\";\n\nimport store from \"./store\";\nimport { Provider } from'react-redux';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n           <HashRouter basename=\"/docStore\">\n           {/* <HashRouter> */}\n              <div>\n                <Herder />\n                <Route path='/' exact component={Home}></Route>\n                <Route path='/sell' exact component={Sell}></Route>\n                <Route path='/profile' exact component={Profile}></Route>\n                <Route path='/detail/:coinName/:tokenAddress/:tokenId' exact component={Detail}></Route>\n              </div>\n           </HashRouter>\n      </Provider>\n    )\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}